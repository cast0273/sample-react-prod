{"ast":null,"code":"var _jsxFileName = \"/Users/jc/Documents/code/MAD2021F/mad9135/in-class review/W5.2/week5-sample-react-app/src/components/Planet/Planet.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Planet({\n  findPlanet\n}) {\n  _s();\n\n  // console.log(props.match.params.id);\n  // props.location   props.history\n  // props.findPlanet() - function in Planets.js to search state array\n  const [planet, setPlanet] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    setPlanet(findPlanet(id));\n  }, [findPlanet, id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is the planet details page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Id: \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", planet && planet.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Terrain: \", planet && planet.terrain]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Planet, \"vfX+HD/zSIZ6t1leRIHpI4F4D/o=\", false, function () {\n  return [useParams];\n});\n\n_c = Planet;\nPlanet.propTypes = {\n  findPlanet: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Planet\");","map":{"version":3,"sources":["/Users/jc/Documents/code/MAD2021F/mad9135/in-class review/W5.2/week5-sample-react-app/src/components/Planet/Planet.js"],"names":["useParams","useEffect","useState","PropTypes","Planet","findPlanet","planet","setPlanet","id","name","terrain","propTypes","func","isRequired"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,eAAe,SAASC,MAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAiC;AAAA;;AAC9C;AACA;AACA;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAASR,SAAS,EAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS,CAACF,UAAU,CAACG,EAAD,CAAX,CAAT;AACD,GAFQ,EAEN,CAACH,UAAD,EAAaG,EAAb,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,yBAAQA,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,2BAAUF,MAAM,IAAIA,MAAM,CAACG,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,8BAAaH,MAAM,IAAIA,MAAM,CAACI,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD;;GAnBuBN,M;UAKPJ,S;;;KALOI,M;AAqBxBA,MAAM,CAACO,SAAP,GAAmB;AACjBN,EAAAA,UAAU,EAAEF,SAAS,CAACS,IAAV,CAAeC;AADV,CAAnB","sourcesContent":["import { useParams } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function Planet ({ findPlanet }) {\n  // console.log(props.match.params.id);\n  // props.location   props.history\n  // props.findPlanet() - function in Planets.js to search state array\n  const [planet, setPlanet] = useState(null)\n  const { id } = useParams()\n\n  useEffect(() => {\n    setPlanet(findPlanet(id))\n  }, [findPlanet, id])\n\n  return (\n    <>\n      <p>This is the planet details page.</p>\n      <p>Id: {id}</p>\n      <p>Name: {planet && planet.name}</p>\n      <p>Terrain: {planet && planet.terrain}</p>\n    </>\n  )\n}\n\nPlanet.propTypes = {\n  findPlanet: PropTypes.func.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}