{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jc/Documents/code/MAD2021F/mad9135/in-class review/W6-2-HashRouter/week5-sample-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jc/Documents/code/MAD2021F/mad9135/in-class review/W6-2-HashRouter/week5-sample-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/jc/Documents/code/MAD2021F/mad9135/in-class review/W6-2-HashRouter/week5-sample-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{Route,NavLink}from'react-router-dom';import Planet from'../Planet/Planet';import'./planets.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Planets(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),list=_useState2[0],setList=_useState2[1];//hooks return 2 things - variable, function to change the variable\n//useState - for creating and updating variables inside state\n//useEffect - for the rendering lifecycle\nfunction fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var url,resp,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url='https://swapi.dev/api/planets';_context.next=3;return fetch(url);case 3:resp=_context.sent;_context.next=6;return resp.json();case 6:data=_context.sent;setList(data.results);//new array being put into `list`\n//changing a state variable tells react to look and see\n//if something needs to be re-rendered\ncase 8:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}function findPlanet(id){return list.find(function(item,index){return parseInt(id)===index+1;});//return an object for the single planet\n}useEffect(function(){//all useEffect functions run on the inital render of the component\nconsole.log('useEffect was called.');fetchData();},[]);//here we are monitoring for changes to `name`\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"planets\",children:[list.length===0&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"planet-list\",children:list.map(function(item,index){return/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(NavLink,{to:\"/planets/\".concat(index+1),children:item.name}),/*#__PURE__*/_jsx(\"span\",{children:item.terrain})]},item.name);})}),/*#__PURE__*/_jsx(\"div\",{className:\"planet-details\",children:/*#__PURE__*/_jsx(Route,{path:\"/planets/:id\",children:/*#__PURE__*/_jsx(Planet,{findPlanet:findPlanet})})})]});}//logical short-circuiting\n// value && object\n//if value is true then the object is rendered\n//if value is false then the object is NOT rendered","map":{"version":3,"sources":["/Users/jc/Documents/code/MAD2021F/mad9135/in-class review/W6-2-HashRouter/week5-sample-react-app/src/components/Planets/Planets.js"],"names":["useState","useEffect","Route","NavLink","Planet","Planets","props","list","setList","fetchData","url","fetch","resp","json","data","results","findPlanet","id","find","item","index","parseInt","console","log","length","map","name","terrain"],"mappings":"koBAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,KAAT,CAAgBC,OAAhB,KAA+B,kBAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAO,eAAP,C,wFAEA,cAAe,SAASC,CAAAA,OAAT,CAAkBC,KAAlB,CAAyB,eACdN,QAAQ,CAAC,EAAD,CADM,wCAC/BO,IAD+B,eACzBC,OADyB,eAEtC;AACA;AACA;AAJsC,QAMvBC,CAAAA,SANuB,qIAMtC,qJACMC,GADN,CACY,+BADZ,uBAEmBC,CAAAA,KAAK,CAACD,GAAD,CAFxB,QAEME,IAFN,qCAGmBA,CAAAA,IAAI,CAACC,IAAL,EAHnB,QAGMC,IAHN,eAIEN,OAAO,CAACM,IAAI,CAACC,OAAN,CAAP,CAAsB;AACtB;AACA;AANF,sDANsC,4CAetC,QAASC,CAAAA,UAAT,CAAqBC,EAArB,CAAyB,CACvB,MAAOV,CAAAA,IAAI,CAACW,IAAL,CAAU,SAACC,IAAD,CAAOC,KAAP,QAAiBC,CAAAA,QAAQ,CAACJ,EAAD,CAAR,GAAiBG,KAAK,CAAG,CAA1C,EAAV,CAAP,CACA;AACD,CAEDnB,SAAS,CAAC,UAAM,CACd;AACAqB,OAAO,CAACC,GAAR,CAAY,uBAAZ,EACAd,SAAS,GACV,CAJQ,CAIN,EAJM,CAAT,CAIO;AAEP,mBACE,aAAK,SAAS,CAAC,SAAf,WACGF,IAAI,CAACiB,MAAL,GAAgB,CAAhB,eAAqB,iCADxB,cAEE,YAAK,SAAS,CAAC,aAAf,UACGjB,IAAI,CAACkB,GAAL,CAAS,SAACN,IAAD,CAAOC,KAAP,qBACR,kCACE,KAAC,OAAD,EAAS,EAAE,oBAAcA,KAAK,CAAG,CAAtB,CAAX,UAAuCD,IAAI,CAACO,IAA5C,EADF,cAEE,sBAAOP,IAAI,CAACQ,OAAZ,EAFF,GAAQR,IAAI,CAACO,IAAb,CADQ,EAAT,CADH,EAFF,cAWE,YAAK,SAAS,CAAC,gBAAf,uBACE,KAAC,KAAD,EAAO,IAAI,CAAC,cAAZ,uBACE,KAAC,MAAD,EAAQ,UAAU,CAAEV,UAApB,EADF,EADF,EAXF,GADF,CAmBD,CACD;AACA;AACA;AACA","sourcesContent":["import { useState, useEffect } from 'react'\nimport { Route, NavLink } from 'react-router-dom'\nimport Planet from '../Planet/Planet'\nimport './planets.css'\n\nexport default function Planets (props) {\n  const [list, setList] = useState([])\n  //hooks return 2 things - variable, function to change the variable\n  //useState - for creating and updating variables inside state\n  //useEffect - for the rendering lifecycle\n\n  async function fetchData () {\n    let url = 'https://swapi.dev/api/planets'\n    let resp = await fetch(url)\n    let data = await resp.json()\n    setList(data.results) //new array being put into `list`\n    //changing a state variable tells react to look and see\n    //if something needs to be re-rendered\n  }\n\n  function findPlanet (id) {\n    return list.find((item, index) => parseInt(id) === index + 1)\n    //return an object for the single planet\n  }\n\n  useEffect(() => {\n    //all useEffect functions run on the inital render of the component\n    console.log('useEffect was called.')\n    fetchData()\n  }, []) //here we are monitoring for changes to `name`\n\n  return (\n    <div className='planets'>\n      {list.length === 0 && <p>Loading...</p>}\n      <div className='planet-list'>\n        {list.map((item, index) => (\n          <p key={item.name}>\n            <NavLink to={`/planets/${index + 1}`}>{item.name}</NavLink>\n            <span>{item.terrain}</span>\n          </p>\n        ))}\n      </div>\n\n      <div className='planet-details'>\n        <Route path='/planets/:id'>\n          <Planet findPlanet={findPlanet} />\n        </Route>\n      </div>\n    </div>\n  )\n}\n//logical short-circuiting\n// value && object\n//if value is true then the object is rendered\n//if value is false then the object is NOT rendered\n"]},"metadata":{},"sourceType":"module"}